import random
import json
import requests

import discord
from discord.ext import commands
from discord.ext.commands import CommandNotFound
from config import settings

from include.discodb import DiscoDB
from include.discoapi import DiscoAPI

db = DiscoDB()
api = DiscoAPI()

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=settings['prefix'], intents=intents)

count = 0
pob = False

vopr = [[]]
nomervopr = 0

isTestStarted = False

qest = []
variant = []
globctx = ''
minevoprs = []
minerightanswers = []

with open('voprosy.txt', encoding='CP1251') as file:
    for line in file:
        vo = line.split('|')
        vopr.append([vo[0], vo[1]])

with open('test.txt') as test:
    cnt = 0
    quest = ''
    for line in test:
        if line.strip() != '@':
            if cnt == 0:
                quest += '\n' + line + '\n'
            else:
                quest += str(cnt) + ": " + line.replace('*', '')
            if '*' in line:
                minerightanswers.append(cnt)
            cnt += 1
        else:
            cnt = 0
            minevoprs.append(quest)
            quest = ''

author = ''


@bot.event
async def on_member_join(member):
    print('qqq')
    channel = bot.get_channel(885574933508411392)
    embed = discord.Embed(title="–ü—Ä–∏–≤–µ—Ç!", description=f"{member.mention} —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è")
    await channel.send(embed=embed)
    await member.send('**–ü—Ä–∏–≤–µ—Ç, –º—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞!**')


@bot.command()
async def starttest(ctx):
    global isTestStarted, globctx, minevoprs, author
    globctx = ctx
    author = ctx.message.author.nick
    await globctx.send('–¢–µ—Å—Ç –Ω–∞—á–∞–ª—Å—è.')
    isTestStarted = True
    try:
        await ctx.send(minevoprs[nomervopr])
    except Exception as ex:
        print(ex)


@bot.command()
async def stoptest(ctx):
    global isTestStarted
    isTestStarted = False
    await ctx.send('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, —Å–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!')


rights = 0


@bot.event
async def on_message(message):
    try:
        global nomervopr, rights, count, isTestStarted
        await bot.process_commands(message)
        if len(
                message.content) > 1 and message.content != "%starttest" and author == message.author.nick and not message.author.bot and isTestStarted:
            isTestStarted = False
            await globctx.send('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ç–µ—Å—Ç–∞)')
        if isTestStarted:
            if len(message.content) == 1:
                if message.content.isdigit():
                    if int(message.content) == minerightanswers[nomervopr]:
                        await globctx.send('**–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –º–∞–ª–∞–¥—ç—Ç—Å!!!**\n')
                        rights += 1
                    else:
                        await globctx.send('**–•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞(–ø—Ä–∏—á–µ–º —Ç—É—Ç –ø–æ–ø—ã—Ç?), –Ω–æ –Ω—ç—Ç**\n')
                    nomervopr += 1
                    if nomervopr == len(minerightanswers) - 1:
                        zvan = ''
                        if rights <= 5:
                            zvan = '–ü–æ–ª–Ω—ã–π –Ω—É–±'
                        elif 5 < rights <= 10:
                            zvan = '–ù—É–±'
                        elif 10 < rights <= 15:
                            zvan = '–ü–æ—á—Ç–∏ –ø—Ä–æ'
                        elif 15 < rights <= 20:
                            zvan = '–ü—Ä–æ'

                        predl = '–¢—ã –º–æ–ª–æ–¥–µ—Ü. –¢—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ' + str(rights) + '–≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª—É—á–∞–µ—à—å –∑–≤–∞–Ω–∏–µ: ' + zvan
                        await globctx.send(predl)
                        isTestStarted = False
                        nomervopr = 0
                    else:
                        await starttest(globctx)
    except Exception as ex:
        print(ex)


@bot.command()
async def hi(ctx):
    try:
        await ctx.send('–ü—Ä–∏–≤–µ—Ç, —è —Ç–≤–æ–π –±–æ—Ç. –í–≤–µ–¥–∏ –∫–æ–º–º–∞–Ω–¥—É %help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é. '
                       '–ï—Å–ª–∏ —Ç—ã –≤–≤–µ–¥–µ—à—å %help_po_db –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥—ã, –≤—ã–≤–µ–¥–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π '
                       '–∫–æ–º–º–∞–Ω–¥–µ.')
    except Exception as ex:
        print(ex)


@bot.command()
async def golosovanie(ctx, *, message):
    try:
        await ctx.message.delete()
        msgage = await ctx.send(message)
        await msgage.add_reaction('üëç')
        await msgage.add_reaction('üëé')
    except Exception as ex:
        print(ex)


@bot.command()
async def help_po_db(ctx, command: str):
    global count, sel
    try:
        sel = db.getcommandhelp(command)
    except Exception as ex:
        print(ex)
    msg = ' - '.join(sel)
    await ctx.send(msg)
    count += 1


@bot.command()
async def vopros(ctx):
    global nomervopr
    try:
        l = random.randint(0, len(vopr) - 1)
        nomervopr = l
        await ctx.send(vopr[l][0])
    except Exception as ex:
        print(ex)


@bot.command()
async def otvet(ctx, msg: str):
    try:
        if msg.strip() == vopr[nomervopr][1].strip():
            await ctx.send('–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –º–∞–ª–∞–¥—ç—Ü!')
        else:
            await ctx.send('–ù–µ —É–≥–∞–¥–∞–ª, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë')
    except Exception as ex:
        print(ex)


@bot.command()
async def neznau(ctx):
    try:
        await ctx.send('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –±—ã–ª: ' + vopr[nomervopr][1])
    except Exception as ex:
        print(ex)


@bot.command()
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount: int):
    global count
    try:
        if amount <= 100:
            amount = int(amount)
            await ctx.channel.purge(limit=amount + 1)
            emb = discord.Embed(title="–ß–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω", colour=discord.Color.purple())
            await ctx.send(embed=emb, delete_after=10)
            count += 1
        else:
            amount = 100000000
            await ctx.channel.purge(limit=amount + 1)
            emb = discord.Embed(title="–ß–∞—Ç –±—ã–ª –æ—á–∏—â–µ–Ω", colour=discord.Color.purple())
            await ctx.send(embed=emb, delete_after=10)
            count += 1
    except Exception as ex:
        print(ex)


@bot.command()
async def roll(ctx, dice: str):
    global count
    try:
        rolls, limit = map(int, dice.split('d'))
    except Exception:
        await ctx.send('–§–æ—Ä–º–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä 1d4')
        return
    result = ', '.join(str(random.randint(1, limit)) for r in range(rolls))
    await ctx.send(result)
    count += 1


@bot.command()
async def sum(ctx, One: int, Two: int):
    global count
    try:
        await ctx.send(One + Two)
        count += 1
    except Exception as ex:
        print(ex)


@bot.command()
async def mult(ctx, One: int, Two: int):
    global count
    try:
        count += 1
        await ctx.send(One * Two)
    except Exception as ex:
        print(ex)


@bot.command()
async def minus(ctx, One: int, Two: int):
    global count
    count += 1
    await ctx.send(One - Two)


@bot.command()
async def delit(ctx, One: int, Two: int):
    global count
    try:
        count += 1
        await ctx.send(One / Two)
    except Exception as ex:
        print(ex)


@bot.command()
async def youtube(ctx, *, finds):
    global count
    try:
        count += 1
        results = api.youtube(finds)
        await ctx.send('https://www.youtube.com/watch?v=' + results[0])
    except Exception as ex:
        print(ex)


@bot.command()
async def server(ctx):
    global count
    try:
        count += 1
        owner = str(ctx.guild.owner)
        region = str(ctx.guild.region)
        guild_id = str(ctx.guild.id)
        memberCount = str(ctx.guild.member_count)
        icon = str(ctx.guild.icon_url)
        desc = ctx.guild.description

        embed = discord.Embed(
            title=ctx.guild.name + " –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ",
            description=desc,
            color=discord.Color.blue()
        )
        embed.set_thumbnail(url=icon)
        embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü", value=owner, inline=True)
        embed.add_field(name="ID —Å–µ—Ä–≤–µ—Ä–∞", value=guild_id, inline=True)
        embed.add_field(name="–†–µ–≥–∏–æ–Ω", value=region, inline=True)
        embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=memberCount, inline=True)

        await ctx.send(embed=embed)

        members = []
        async for member in ctx.guild.fetch_members(limit=150):
            await ctx.send('–ò–º—è: {}\t –°—Ç–∞—Ç—É—Å: {}\n –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è {}'.format(member.display_name, str(member.status),
                                                                            str(member.joined_at)))
    except Exception as ex:
        print(ex)


@bot.command()
async def check(ctx):
    global count
    try:
        count += 1
        await ctx.send('‚ôü –º–∞—Ç ‚ôü')
    except Exception as ex:
        print(ex)


@bot.command()
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member, *, reason=None):
    global count
    try:
        count += 1
        await ctx.message.delete()
        await member.kick(reason=reason)
        emb = discord.Embed(title=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–¥ –∏–º–µ–Ω–µ–º {member.name}, –±—ã–ª –∫–∏–∫–Ω—É—Ç!",
                            colour=discord.Color.dark_gold())
        await ctx.send(embed=emb)
    except Exception as ex:
        print(ex)


@bot.event
async def on_command_error(ctx, error):
    global count
    try:
        count += 1
        if isinstance(error, CommandNotFound):
            await ctx.send('–¢—ã –≤–≤–µ–ª –Ω–µ —Ç—É –∫–æ–º–º–∞–Ω–¥—É!!!')
    except Exception as ex:
        print(ex)


@bot.command()
async def hello(ctx):
    global count
    try:
        count += 1
        author = ctx.message.author
        await ctx.send(f'–ü—Ä–∏–≤–µ—Ç, {author.mention}!')
    except Exception as ex:
        print(ex)


@bot.command()
async def bye(ctx):
    global count
    try:
        count += 1
        author = ctx.message.author
        await ctx.send(f'–ü–æ–∫–∞, {author.mention}!')
    except Exception as ex:
        print(ex)


@bot.command()
async def tts(ctx, msg):
    try:
        await ctx.send(msg, tts=True)
    except Exception as ex:
        print(ex)


@bot.event
async def on_command(ctx):
    server = ctx.guild.name
    user = ctx.author
    command = ctx.command
    try:
        db.logcommand(user, command)
    except Exception as ex:
        print(ex)


@bot.command()
async def last10(ctx):
    try:
        sel = db.getlast10commands()
        coms = []
        coms.append('–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∫–æ–º–∞–Ω–¥: ')
        for s in sel:
            coms.append('–Æ–∑–µ—Ä: ' + str(s[0]) + '   –ö–æ–º–∞–Ω–¥–∞: ' + str(s[1]))
        await ctx.send('\n'.join(coms))
    except Exception as ex:
        print(ex)


@bot.command()
async def role(ctx, member: discord.Member, role: discord.Role):
    try:
        await member.add_roles(role)
    except Exception as ex:
        print(ex)


@bot.command()
async def fox(ctx):
    global count
    try:
        count += 1
        response = api.fox()
        json_data = json.loads(response.text)
        embed = discord.Embed(color=0xff9900, title='–õ–∏—Å—è')
        embed.set_image(url=json_data['link'])
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.command()
async def anime(ctx):
    global count
    try:
        count += 1
        response = api.anime()
        json_data = json.loads(response.text)
        embed = discord.Embed(color=0xff9900, title='Animeeeee')
        embed.set_image(url=json_data['link'])
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.command()
async def anime2(ctx):
    global count
    try:
        count += 1
        response = api.anime2()
        json_data = json.loads(response.text)
        embed = discord.Embed(color=0xff9900, title='Animeeeee')
        embed.set_image(url=json_data['link'])
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.command()
async def dog(ctx):
    global count
    try:
        count += 1
        response = requests.get('https://some-random-api.ml/img/dog')
        json_data = json.loads(response.text)

        embed = discord.Embed(color=0xff9900, title='–°–æ–±—è–∫–∞')
        embed.set_image(url=json_data['link'])
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.command()
async def parthner(ctx):
    global count
    try:
        count += 1
        embed = discord.Embed(
            title="–¢—ã–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞",
            description="–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π —á–µ–ª–æ–≤–µ–≥–æ–≤:",
            url='https://discord.gg/2gBh6W7ye2')
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.command()
async def parthner2(ctx):
    global count
    try:
        count += 1
        embed = discord.Embed(
            title="–¢—ã–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞",
            description="–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π —á–µ–ª–æ–≤–µ–≥–æ–≤:",
            url='https://discord.gg/FBGkd8RR4X')
        await ctx.send(embed=embed)
    except Exception as ex:
        print(ex)


@bot.event
async def on_ready():
    while True:
        game = discord.Game("–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ \n CUBECRAFT")
        await bot.change_presence(status=discord.Status.idle, activity=game)


bot.run(settings['token'])
